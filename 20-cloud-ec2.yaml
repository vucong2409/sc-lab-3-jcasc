jenkins:
  clouds:
    - amazonEC2:
        name: "ec2"
        instanceCapStr: 1
        region: "ap-southeast-1"
        credentialsId: "aws-for-jenkins-master"
        sshKeysCredentialsId: "ssh-for-jenkins-worker"
        templates:
          - description: "Packer Agent for jenkins"
            type: "T3Micro"
            labelString: "packer"
            ami: "${PACKER_WORKER_AMI}"
            securityGroups: "${WORKER_SECURITY_GROUP_ID}"
            deleteRootOnTermination: false
            connectionStrategy: PRIVATE_IP
            subnetId: "${WORKER_SUBNET_ID}"
            iamInstanceProfile: "${PACKER_WORKER_INSTANCE_PROFILE}"
            remoteFS: "/home/ec2-user"
            remoteAdmin: "ec2-user"
            amiType:
              unixData:
                rootCommandPrefix: "sudo"
          - description: "Terraform Agent for jenkins"
            type: "T3Micro"
            labelString: "terraform"
            ami: "${TERRAFORM_WORKER_AMI}"
            securityGroups: "${WORKER_SECURITY_GROUP_ID}"
            deleteRootOnTermination: false
            connectionStrategy: PRIVATE_IP
            subnetId: "${WORKER_SUBNET_ID}"
            iamInstanceProfile: "${TERRAFORM_WORKER_INSTANCE_PROFILE}"
            remoteFS: "/home/ec2-user"
            remoteAdmin: "ec2-user"
            amiType:
              unixData:
                rootCommandPrefix: "sudo"
          - description: "Docker Agent for jenkins"
            type: "T3Micro"
            labelString: "docker"
            ami: "${DOCKER_WORKER_AMI}"
            securityGroups: "${WORKER_SECURITY_GROUP_ID}"
            deleteRootOnTermination: false
            connectionStrategy: PRIVATE_IP
            subnetId: "${WORKER_SUBNET_ID}"
            iamInstanceProfile: "${DOCKER_WORKER_INSTANCE_PROFILE}"
            remoteFS: "/home/ec2-user"
            remoteAdmin: "ec2-user"
            amiType:
              unixData:
                rootCommandPrefix: "sudo"
            userData: |
              systemctl start docker
